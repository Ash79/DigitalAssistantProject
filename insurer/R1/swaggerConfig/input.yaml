swagger: '2.0'
info:
  version: v1
  title: insurer
  description: This is sample API being generated by cedrus-api generator
host: 'localhost:2002'
basePath: /api
schemes:
  - http
  - https
produces:
  - application/json
paths:
  /v1/insurers:
    get:
      tags:
        - Insurer
      description: Gets all insurers from the system that the user has access to
      operationId: getInsurer
      produces:
        - application/json
      x-swagger-router-controller: Insurer
      responses:
        '200':
          description: insurer response
          schema:
            type: array
            items:
              $ref: '#/definitions/v1insurers'
        '404':
          description: insurer response
          schema:
            type: object
        '500':
          description: insurer response
          schema:
            type: object
      parameters:
        - name: pageSize
          in: query
          description: Number of records returned
          type: integer
        - name: pageNumber
          in: query
          description: Page number
          type: integer
    put:
      tags:
        - Insurer
      description: Puts all insurers from the system that the user has access to
      operationId: putInsurer
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: Insurer
      responses:
        '204':
          description: insurer response
          schema:
            type: array
            items:
              $ref: '#/definitions/v1insurers'
        '404':
          description: insurer response
          schema:
            type: object
        '500':
          description: insurer response
          schema:
            type: object
      parameters:
        - name: v1/insurers
          in: body
          schema:
            $ref: '#/definitions/v1insurers'
    post:
      tags:
        - Insurer
      description: Posts all insurers from the system that the user has access to
      operationId: postInsurer
      produces:
        - application/json
      consumes:
        - application/json
      x-swagger-router-controller: Insurer
      responses:
        '204':
          description: insurer response
          schema:
            type: array
            items:
              $ref: '#/definitions/v1insurers'
        '404':
          description: insurer response
          schema:
            type: object
        '500':
          description: insurer response
          schema:
            type: object
      parameters:
        - name: v1/insurers
          in: body
          schema:
            $ref: '#/definitions/v1insurers'
definitions:
  ApiError:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  v1insurers:
    type: object
    properties:
      policy_no:
        type: string
      client_name:
        type: string
      address:
        type: object
        properties:
          Street Name:
            type: string
          City:
            type: string
          State:
            type: string
          P.o.Box:
            type: number
          Country:
            type: string
        required:
          - Street Name
          - City
          - State
          - P.o.Box
          - Country
    required:
      - policy_no
      - client_name
responses:
  Standard500ErrorResponse:
    description: An unexpected error occured.
    schema:
      $ref: '#/definitions/ApiError'
  PersonDoesNotExistResponse:
    description: Person does not exist.
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  gateway: datapower-gateway
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:8080'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
          tls-profile: ''
          secure-gateway: false
    catch: []
